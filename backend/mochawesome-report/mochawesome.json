{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-19T08:27:32.576Z",
    "end": "2020-02-19T08:27:34.846Z",
    "duration": 2270,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "d5e40111-ee62-4fb9-a93a-49c07c3be5b8",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "db555c71-a9b3-4004-9e87-cc779a920a46",
        "title": "Create New Exercise Log page automated testing",
        "fullFile": "/Users/scarlettgao/Documents/MERN/mern_demo/backend/test/createExerciseLogPage.test.js",
        "file": "/test/createExerciseLogPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Create New Exercise Log page automated testing \"before each\" hook",
            "timedOut": false,
            "duration": 826,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\nawait page.visit(\"http://localhost:3000/create\");",
            "err": {},
            "isRoot": false,
            "uuid": "62b35b53-4d17-44b9-8813-839255e0d433",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Create New Exercise Log page automated testing \"after each\" hook",
            "timedOut": false,
            "duration": 57,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit();",
            "err": {},
            "isRoot": false,
            "uuid": "9b239132-5ba3-4b5a-a5fb-3849e52d4af8",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Create New Exercise Log -- check if contents are displayed ",
            "fullTitle": "Create New Exercise Log page automated testing Create New Exercise Log -- check if contents are displayed ",
            "timedOut": false,
            "duration": 222,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const title = await page.findThroughTagName(\"h3\");\nexpect(title).to.equal('Create New Exercise Log');\nconst usernameLabel = await page.findThroughId(\"usernameLabel\");\nexpect(usernameLabel).to.equal('Username:');\nconst descriptionLabel = await page.findThroughId(\"descriptionLabel\");\nexpect(descriptionLabel).to.equal('Description:');\nconst durationLabel = await page.findThroughId(\"durationLabel\");\nexpect(durationLabel).to.equal('Duration (in minutes):');\nconst dateLabel = await page.findThroughId(\"dateLabel\");\nexpect(dateLabel).to.equal('Date:');",
            "err": {},
            "isRoot": false,
            "uuid": "8228acd2-de64-42dc-9d77-fd4a351f35eb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "find the input box and button",
            "fullTitle": "Create New Exercise Log page automated testing find the input box and button",
            "timedOut": false,
            "duration": 58,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findInputAndButton();\nexpect(result.inputEnabled).to.equal(true);\n// expect(result.buttonText).to.include('Create Exercise Log');",
            "err": {},
            "isRoot": false,
            "uuid": "ca29236c-bbeb-43e2-b304-77a0131ada91",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8228acd2-de64-42dc-9d77-fd4a351f35eb",
          "ca29236c-bbeb-43e2-b304-77a0131ada91"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 280,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      },
      {
        "uuid": "dcb24ae2-e46e-41d3-b155-d8aed601e3bb",
        "title": "User page automated testing",
        "fullFile": "/Users/scarlettgao/Documents/MERN/mern_demo/backend/test/userPage.test.js",
        "file": "/test/userPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook for \"find the input box and button\"",
            "fullTitle": "User page automated testing \"before each\" hook for \"find the input box and button\"",
            "timedOut": false,
            "duration": 1,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\nawait page.visit(`${process.env.TESTING_URL}/user`);\n// await page.visit(\"http://localhost:3000/user\");",
            "err": {
              "message": "TypeError: Page is not a constructor",
              "estack": "TypeError: Page is not a constructor\n    at Context.beforeEach (test/userPage.test.js:19:24)"
            },
            "isRoot": false,
            "uuid": "c9ca4754-1fea-494d-9191-1966733119ac",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook for \"find the input box and button\"",
            "fullTitle": "User page automated testing \"after each\" hook for \"find the input box and button\"",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "await page.quit();",
            "err": {
              "message": "TypeError: Cannot read property 'quit' of undefined",
              "estack": "TypeError: Cannot read property 'quit' of undefined\n    at Context.afterEach (test/userPage.test.js:26:28)"
            },
            "isRoot": false,
            "uuid": "a5602459-df5e-471a-9754-896436e56121",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "find the input box and button",
            "fullTitle": "User page automated testing find the input box and button",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findInputAndButton();\nexpect(result.inputEnabled).to.equal(true);\nexpect(result.buttonText).to.include('Create User');",
            "err": {},
            "isRoot": false,
            "uuid": "5f670cb4-a914-4867-ab3e-2c17855cb109",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "Create User -- check if contents are displayed ",
            "fullTitle": "User page automated testing Create User -- check if contents are displayed ",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const title = await page.findThroughTagName(\"h3\");\nexpect(title).to.equal('Create New User');\nconst UserNameLable = await page.findThroughTagName(\"label\");\nconsole.log(\"UserNameLable is \", UserNameLable);\nexpect(UserNameLable).to.equal('Username:');",
            "err": {},
            "isRoot": false,
            "uuid": "743122ff-4f82-4ab6-80b9-3de04853a726",
            "isHook": false,
            "skipped": true
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [
          "5f670cb4-a914-4867-ab3e-2c17855cb109",
          "743122ff-4f82-4ab6-80b9-3de04853a726"
        ],
        "duration": null,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}