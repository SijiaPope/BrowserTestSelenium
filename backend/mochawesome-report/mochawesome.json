{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-19T19:52:43.617Z",
    "end": "2020-02-19T19:52:46.234Z",
    "duration": 2617,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "08308070-5c53-466f-b481-62d4ed9e16a4",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "37a06caa-016b-4933-995f-e0148ce12c48",
        "title": "Create New Exercise Log page automated testing",
        "fullFile": "/Users/scarlettgao/Documents/MERN/mern_demo/backend/test/createExerciseLogPage.test.js",
        "file": "/test/createExerciseLogPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Create New Exercise Log page automated testing \"before each\" hook",
            "timedOut": false,
            "duration": 855,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new ExercisePage();\ndriver = page.driver;\nawait page.visit(\"http://localhost:3000/create\");",
            "err": {},
            "isRoot": false,
            "uuid": "07bc714f-48ba-4584-9312-b8b4a698c60d",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Create New Exercise Log page automated testing \"after each\" hook",
            "timedOut": false,
            "duration": 52,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit();",
            "err": {},
            "isRoot": false,
            "uuid": "5266814a-06e9-46e0-ae09-b04a46b895b0",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Create New Exercise Log -- check if contents are displayed ",
            "fullTitle": "Create New Exercise Log page automated testing Create New Exercise Log -- check if contents are displayed ",
            "timedOut": false,
            "duration": 205,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const title = await page.findThroughTagName(\"h3\");\nexpect(title).to.equal('Create New Exercise Log');\nconst usernameLabel = await page.findThroughId(\"usernameLabel\");\nexpect(usernameLabel).to.equal('Username:');\nconst descriptionLabel = await page.findThroughId(\"descriptionLabel\");\nexpect(descriptionLabel).to.equal('Description:');\nconst durationLabel = await page.findThroughId(\"durationLabel\");\nexpect(durationLabel).to.equal('Duration (in minutes):');\nconst dateLabel = await page.findThroughId(\"dateLabel\");\nexpect(dateLabel).to.equal('Date:');",
            "err": {},
            "isRoot": false,
            "uuid": "eab70088-41e8-4315-8dab-3c92f0372b33",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "find the input box and button",
            "fullTitle": "Create New Exercise Log page automated testing find the input box and button",
            "timedOut": false,
            "duration": 201,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findInputAndButton();\nexpect(result.userNameSelectionEnableFlag).to.equal(true);\nexpect(result.descriptionInputEnableFlag).to.equal(true);\nexpect(result.durationInputEnableFlag).to.equal(true);\nexpect(result.datePickerEnableFlag).to.equal(true);\nexpect(result.createButtonText).to.equal('Create Exercise Log');",
            "err": {},
            "isRoot": false,
            "uuid": "e5633df4-421c-45c4-acdb-8b4cf7398d0b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "eab70088-41e8-4315-8dab-3c92f0372b33",
          "e5633df4-421c-45c4-acdb-8b4cf7398d0b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 406,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      },
      {
        "uuid": "c62ed082-5cc2-41e1-bed9-f18a80290ec1",
        "title": "User page automated testing",
        "fullFile": "/Users/scarlettgao/Documents/MERN/mern_demo/backend/test/userPage.test.js",
        "file": "/test/userPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook for \"find the input box and button\"",
            "fullTitle": "User page automated testing \"before each\" hook for \"find the input box and button\"",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\nawait page.visit(`${process.env.TESTING_URL}/user`);\n// await page.visit(\"http://localhost:3000/user\");",
            "err": {
              "message": "TypeError: Page is not a constructor",
              "estack": "TypeError: Page is not a constructor\n    at Context.beforeEach (test/userPage.test.js:19:24)"
            },
            "isRoot": false,
            "uuid": "6efbd00f-6065-4fb7-bcdc-fda5f49197ac",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook for \"find the input box and button\"",
            "fullTitle": "User page automated testing \"after each\" hook for \"find the input box and button\"",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "await page.quit();",
            "err": {
              "message": "TypeError: Cannot read property 'quit' of undefined",
              "estack": "TypeError: Cannot read property 'quit' of undefined\n    at Context.afterEach (test/userPage.test.js:26:28)"
            },
            "isRoot": false,
            "uuid": "48a07d70-5851-4ea0-9165-53b0d15d499b",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "find the input box and button",
            "fullTitle": "User page automated testing find the input box and button",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findInputAndButton();\nexpect(result.inputEnabled).to.equal(true);\nexpect(result.buttonText).to.include('Create User');",
            "err": {},
            "isRoot": false,
            "uuid": "f7f48711-478e-48fe-a181-14f341f3c6be",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "Create User -- check if contents are displayed ",
            "fullTitle": "User page automated testing Create User -- check if contents are displayed ",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const title = await page.findThroughTagName(\"h3\");\nexpect(title).to.equal('Create New User');\nconst UserNameLable = await page.findThroughTagName(\"label\");\nconsole.log(\"UserNameLable is \", UserNameLable);\nexpect(UserNameLable).to.equal('Username:');",
            "err": {},
            "isRoot": false,
            "uuid": "ff5ba5c9-bcca-480d-97e0-8634facf53e8",
            "isHook": false,
            "skipped": true
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [
          "f7f48711-478e-48fe-a181-14f341f3c6be",
          "ff5ba5c9-bcca-480d-97e0-8634facf53e8"
        ],
        "duration": null,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}